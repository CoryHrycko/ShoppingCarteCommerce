{"version":3,"sources":["components/Backdrop/Backdrop.js","containers/sideDrawer/DrawerToggle.js","containers/toolBar/toolBar.js","actions/cart.js","components/shelf.js","components/cart.js","containers/sideDrawer/SideDrawer.js","App.js","serviceWorker.js","store.js","reducers/index.js","reducers/cart.js","index.js"],"names":["backdrop","props","react_default","a","createElement","className","onClick","click","drawerToggleButton","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","fill","d","toolbar","DrawerToggle","drawerClickHandler","href","addToCart","item","console","log","type","Shelf","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickAdd","bind","assertThisInitialized","state","shelfItems","addItem","_this2","map","idx","key","Component","Cart","CartItems","cart","shelf","action","alert","connect","prop","dispatch","bindActionCreators","CartActions","sideDrawer","drawerClaseses","show","library","add","faShoppingCart","App","sideDrawerOpen","drawerToggleClickHandler","setState","prevState","backdropClickHandler","Backdrop","toolBar","SideDrawer","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","arguments","length","undefined","payload","toConsumableArray","concat","StoreInstance","createStore","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e03c636.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst backdrop = props => (\r\n<div className='backdrop' onClick={props.click}/>\r\n);\r\n\r\nexport default backdrop","import React from 'react';\r\n\r\n\r\nconst drawerToggleButton = props => (\r\n    <button className='toggleButton' onClick={props.click}>\r\n        <div className=\"icon\">\r\n            <svg aria-hidden=\"true\" data-prefix=\"fas\" data-icon=\"shopping-cart\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" className=\"icon\">\r\n            <path fill=\"currentColor\" d=\"M528.12 301.319l47.273-208C578.806 78.301 567.391 64 551.99 64H159.208l-9.166-44.81C147.758 8.021 137.93 0 126.529 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24h69.883l70.248 343.435C147.325 417.1 136 435.222 136 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-15.674-6.447-29.835-16.824-40h209.647C430.447 426.165 424 440.326 424 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-22.172-12.888-41.332-31.579-50.405l5.517-24.276c3.413-15.018-8.002-29.319-23.403-29.319H218.117l-6.545-32h293.145c11.206 0 20.92-7.754 23.403-18.681z\" className=\"\">\r\n            </path></svg>\r\n        </div>\r\n    </button>\r\n);\r\n\r\nexport default drawerToggleButton;","import React from 'react';\r\nimport DrawerToggleButton from '../sideDrawer/DrawerToggle';\r\n\r\nconst toolbar = props => (\r\n    <header className='toolBar'>\r\n        <nav className='toolBarNav'>\r\n            <div className=\"toolBarToggle\">\r\n                <DrawerToggleButton click={props.drawerClickHandler}/>\r\n            </div>\r\n            <div className='toolBarLogo'><a href='root'><i className=\"fa fa-circle-o-notch\" aria-hidden=\"true\"></i> White Snow Store</a></div>\r\n            ,<div className='spacer' />\r\n            <div className='toolBarNavItems'>\r\n                <ul>\r\n                    <li><a href=\"x\">Projects</a></li>\r\n                    <li><a href=\"x\">Bio</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","export const addToCart = (item)=>{\r\n    console.log(\"adding item\", item);\r\n    return {\r\n        type: 'add',\r\n        item\r\n    };\r\n}","import React, { Component } from 'react';\r\n\r\nclass Shelf extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onClickAdd = this.onClickAdd.bind(this);\r\n        this.state = {\r\n            shelfItems: [\r\n                'Web Development ' + \" \" + 20.00 + \"\\/hr\",\r\n                'Programing' + \" \" + 20.00 + \"\\/hr\",\r\n                'SEO'+ \" \" + 20.00 + \"\\/hr\",\r\n                \"Litterally any php can be placed here\",\r\n                \r\n                \r\n            ]\r\n            \r\n        }\r\n    }\r\n\r\nonClickAdd(item){\r\n    this.props.addItem(item);\r\n}\r\n\r\nrender() {\r\n    const shelfItems = this.state.shelfItems.map((item,idx)=>{\r\n        return <li key={idx}><button className=\"button button1\" onClick={()=>this.onClickAdd(item)}>Add Service</button> {item}</li>\r\n    }); \r\n    return (\r\n        <div className= \"itemsShelf\">\r\n            <h2>Services</h2>\r\n            <ul className='orders'>\r\n                {shelfItems}\r\n            </ul>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shelf;\r\n","import React, { Component } from 'react';\nimport { bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport * as CartActions from '../actions/cart';\nimport Shelf from './shelf';\n\nclass Cart extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n\n    }\n  }\n\n\n  render() {\n    console.log(this.props);\n    const CartItems = this.props.cart.map((item, idx)=>{\n        return <li key={idx}>{item}</li>\n    })\n    return (\n      <div className=\"Cart\">\n        <Shelf addItem={this.props.action.addToCart} />\n        <div className='mainCart'>\n        <div className=\"titleCart1\"><h2> Services&nbsp;</h2></div> <div className=\"titleCart2\"><h2> Rendered</h2></div>\n        <ul>\n          {CartItems}\n          <div className=\"purchase\">\n          <button onClick={() => {alert('THis is where php authentification goes to either: a-email a request form, or b-authenticate to go to paypal');}}>Purchase</button>\n        </div>\n        </ul>\n      </div></div>\n    );\n  }\n}\n\n\n\n\n\nfunction mapStateToProps(state, prop){\n  return{\n    cart: state.cart\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return{\n    action: bindActionCreators(CartActions, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from 'react';\r\nimport Cart from '../../components/cart';\r\n\r\n\r\nconst sideDrawer = props => {\r\n\r\n    let drawerClaseses = 'sideDrawer';\r\n    if(props.show) {\r\n        drawerClaseses ='sideDrawer open';\r\n    }\r\n  return (\r\n  <nav className={drawerClaseses}>\r\n        <ul>\r\n            <Cart/>\r\n        </ul>\r\n    </nav>);\r\n};\r\n\r\n\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\nimport Backdrop from '../src/components/Backdrop/Backdrop';\nimport Toolbar from '../src/containers/toolBar/toolBar';\nimport SideDrawer from '../src/containers/sideDrawer/SideDrawer'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {  faShoppingCart } from '@fortawesome/free-solid-svg-icons'\n\nimport './App.css';\n\nimport Cart from './components/cart';\n\nlibrary.add( faShoppingCart )\n\nclass App extends Component {\n\n  state = {\n    sideDrawerOpen: false\n  };\n  drawerToggleClickHandler = () =>{\n    this.setState((prevState) =>{\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\n    });\n  };\n\nbackdropClickHandler=()=>{\n  this.setState({sideDrawerOpen:false});\n};\n\n\n\n\n\n  render() {\n\n    let backdrop;\n\n    if (this.state.sideDrawerOpen){\n      backdrop = <Backdrop click={this.backdropClickHandler}/>\n    }\n\n    return (\n      <div className=\"App\">\n        <Toolbar drawerClickHandler={this.drawerToggleClickHandler}/>\n          <SideDrawer show={this.state.sideDrawerOpen}/>\n          {backdrop}\n\n          <div className=\"App-header\">\n          <h1 className= \"title\">White Snow</h1>\n          <h3 className= \"subTitle\">Design Studios</h3>\n          </div>\n          <div className=\"App-intro\">\n            <Cart />\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore} from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nexport default(initialState)=>{\r\n    return createStore(rootReducer, initialState);\r\n}\r\n\r\n\r\n","import cart from './cart.js';\r\nimport {combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    cart\r\n});\r\n\r\nexport default rootReducer;","export default(state = [], payload)=> {\r\n    switch(payload.type){\r\n        case 'add':\r\n            return [...state, payload.item];\r\n        default:\r\n            return state;\r\n    }\r\n}; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './CSS/my.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport{ Provider} from 'react-redux';\nimport Store from './store';\n\nconst StoreInstance = Store();\n\n\nReactDOM.render(\n<Provider store = {StoreInstance}>\n<App />\n</Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}